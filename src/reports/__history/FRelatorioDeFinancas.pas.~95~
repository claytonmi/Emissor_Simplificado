unit FRelatorioDeFinancas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, uDataModulePrincipal,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, RLReport;

type
  TFRelatorioFinancas = class(TForm)
    RLReport: TRLReport;
    RLBandCabecalho: TRLBand;
    RLLabelTitulo: TRLLabel;
    RLLabelPeriodo: TRLLabel;
    RLGroupVendas: TRLGroup;
    RLBandColunas: TRLBand;
    RLBandDetalhes: TRLBand;
    RLBandTotalFinancas: TRLBand;
    RLLabelProduto: TRLLabel;
    RLLabelQuantidade: TRLLabel;
    RLLabelValorCusto: TRLLabel;
    RLLabelVenda: TRLLabel;
    RLLabelTotal: TRLLabel;
    RLBandRodaPe: TRLBand;
    RLLabel6: TRLLabel;
    RLSystemInfo1: TRLSystemInfo;
    RLDBTextProduto: TRLDBText;
    RLDBTextQuantidade: TRLDBText;
    RLDBTextValor: TRLDBText;
    RLDBTextTotal: TRLDBText;
    RLLabelMoeda: TRLLabel;
    RLDBText1: TRLDBText;
    RLLabelMoedaTotal: TRLLabel;
    procedure GerarRelatorio(DataInicial: TDateTime; DataFim: TDateTime; NomeProdutoSelecionado: string);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FRelatorioFinancas: TFRelatorioFinancas;

implementation

{$R *.dfm}
procedure TFRelatorioFinancas.GerarRelatorio(DataInicial: TDateTime; DataFim: TDateTime; NomeProdutoSelecionado: string);
var
  IdiomaRelatorio, MoedaConfigurada, SimboloMoeda: string;
  TotalGeral: Currency;
  FiltroProdutoMain, FiltroProdutoSub: string;
begin
  if (DataInicial <> 0) and (DataFim <> 0) then
  begin
    // Obtém idioma e moeda
    if dbType = 'SQLite' then
    begin
      with DataModulePrincipal.FDQueryConfiguracao do
      begin
        Close;
        SQL.Text := 'SELECT Idioma FROM Configuracao WHERE NomeConfiguracao = :Nome';
        ParamByName('Nome').AsString := 'UsaIdiomaNoRelatorio';
        Open;
        IdiomaRelatorio := FieldByName('Idioma').AsString;
        Close;
        SQL.Text := 'SELECT UsarMoeda FROM Configuracao WHERE NomeConfiguracao = :Nome';
        ParamByName('Nome').AsString := 'MoedaApresentadaNoRelatorio';
        Open;
        MoedaConfigurada := FieldByName('UsarMoeda').AsString;
      end;
    end
    else if dbType = 'SQL Server' then
    begin
      with DataModulePrincipal.ADOQueryConfiguracao do
      begin
        Close;
        SQL.Text := 'SELECT Idioma FROM Configuracao WHERE NomeConfiguracao = :Nome';
        Parameters.ParamByName('Nome').Value := 'UsaIdiomaNoRelatorio';
        Open;
        IdiomaRelatorio := FieldByName('Idioma').AsString;
        Close;
        SQL.Text := 'SELECT UsarMoeda FROM Configuracao WHERE NomeConfiguracao = :Nome';
        Parameters.ParamByName('Nome').Value := 'MoedaApresentadaNoRelatorio';
        Open;
        MoedaConfigurada := FieldByName('UsarMoeda').AsString;
      end;
    end;

    // Define símbolo da moeda
    if MoedaConfigurada = 'Real Brasileiro' then
      SimboloMoeda := 'R$'
    else if MoedaConfigurada = 'Dólar Americano' then
      SimboloMoeda := '$'
    else if MoedaConfigurada = 'Euro' then
      SimboloMoeda := '€'
    else if MoedaConfigurada = 'Dólar Canadense' then
      SimboloMoeda := 'C$'
    else
      SimboloMoeda := 'R$';

    RLLabelMoeda.Caption := SimboloMoeda;
    RLLabelMoedaTotal.Caption := 'Total ' + SimboloMoeda + ':';

    // Define filtros se necessário
    if (NomeProdutoSelecionado <> '--- Todos ---') then
    begin
      FiltroProdutoMain := ' AND ip.NomeProduto = :NomeProduto ';
      FiltroProdutoSub := ' AND ip2.NomeProduto = :NomeProduto ';
    end
    else
    begin
      FiltroProdutoMain := '';
      FiltroProdutoSub := '';
    end;

    // Consulta principal
    if dbType = 'SQLite' then
    begin
      with DataModulePrincipal.FDQueryRelatorioFinancas do
      begin
        Close;
        SQL.Text :=
          'SELECT ip.NomeProduto, ' +
          '  SUM(ip.Quantidade) AS QuantidadeVendida, ' +
          '  AVG(ip.Valor) AS PrecoVenda, ' +
          '  pr.PrecoCusto, ' +
          '  SUM(CASE WHEN pr.PrecoCusto IS NULL OR pr.PrecoCusto = 0 ' +
          '           THEN ip.Quantidade * ip.Valor ' +
          '           ELSE ip.Quantidade * (ip.Valor - pr.PrecoCusto) END) AS LucroTotal, ' +
          '  (SELECT SUM(CASE WHEN pr2.PrecoCusto IS NULL OR pr2.PrecoCusto = 0 ' +
          '                   THEN ip2.Quantidade * ip2.Valor ' +
          '                   ELSE ip2.Quantidade * (ip2.Valor - pr2.PrecoCusto) END) ' +
          '   FROM ItemPedido ip2 ' +
          '   JOIN Pedido pd2 ON ip2.IDVenda = pd2.IDVenda ' +
          '   JOIN Produto pr2 ON ip2.IDProduto = pr2.IDProduto ' +
          '   WHERE pd2.Data BETWEEN :DataInicial AND :DataFinal' + FiltroProdutoSub + ') AS TotalGeral ' +
          'FROM ItemPedido ip ' +
          'JOIN Pedido pd ON ip.IDVenda = pd.IDVenda ' +
          'JOIN Produto pr ON ip.IDProduto = pr.IDProduto ' +
          'WHERE pd.Data BETWEEN :DataInicial AND :DataFinal' + FiltroProdutoMain +
          ' GROUP BY ip.NomeProduto, pr.PrecoCusto ' +
          'ORDER BY ip.NomeProduto';

        ParamByName('DataInicial').AsDate := DataInicial;
        ParamByName('DataFinal').AsDate := DataFim;
        if FiltroProdutoMain <> '' then
        begin
          ParamByName('NomeProduto').AsString := NomeProdutoSelecionado;
          Params[3].AsString := NomeProdutoSelecionado; // segunda ocorrência
        end;
        Open;
        TotalGeral := FieldByName('TotalGeral').AsCurrency;
      end;
    end
    else if dbType = 'SQL Server' then
    begin
      with DataModulePrincipal.ADOQueryRelatorioFinancas do
      begin
        Close;
        SQL.Text :=
          'SELECT p.NomeProduto, SUM(ip.Quantidade) AS QuantidadeVendida, ' +
          '       pr.Preco AS PrecoVenda, pr.PrecoCusto, ' +
          '       SUM(CASE WHEN pr.PrecoCusto IS NULL OR pr.PrecoCusto = 0 ' +
          '                THEN ip.Quantidade * pr.Preco ' +
          '                ELSE ip.Quantidade * (pr.Preco - pr.PrecoCusto) END) AS LucroTotal, ' +
          '       (SELECT SUM(CASE WHEN pr2.PrecoCusto IS NULL OR pr2.PrecoCusto = 0 ' +
          '                        THEN ip2.Quantidade * pr2.Preco ' +
          '                        ELSE ip2.Quantidade * (pr2.Preco - pr2.PrecoCusto) END) ' +
          '        FROM ItemPedido ip2 ' +
          '        JOIN Pedido pd2 ON ip2.IDVenda = pd2.IDVenda ' +
          '        JOIN Produto pr2 ON ip2.IDProduto = pr2.IDProduto ' +
          '        WHERE pd2.Data BETWEEN :DataIniciall AND :DataFinall' + FiltroProdutoSub + ') AS TotalGeral ' +
          'FROM ItemPedido ip ' +
          'JOIN Pedido pd ON ip.IDVenda = pd.IDVenda ' +
          'JOIN Produto pr ON ip.IDProduto = pr.IDProduto ' +
          'JOIN Produto p ON p.IDProduto = ip.IDProduto ' +
          'WHERE pd.Data BETWEEN :DataInicial AND :DataFinal' + FiltroProdutoMain +
          ' GROUP BY p.NomeProduto, pr.Preco, pr.PrecoCusto ' +
          'ORDER BY p.NomeProduto';

        Parameters.ParamByName('DataIniciall').Value := DataInicial;
        Parameters.ParamByName('DataFinall').Value := DataFim;
        Parameters.ParamByName('DataInicial').Value := DataInicial;
        Parameters.ParamByName('DataFinal').Value := DataFim;
        if FiltroProdutoMain <> '' then
        begin
          Parameters.ParamByName('NomeProduto').Value := NomeProdutoSelecionado;
        end;
        Open;
        TotalGeral := FieldByName('TotalGeral').AsCurrency;
      end;
    end;

    ShowMessage('Total Geral calculado: ' + FormatFloat('0.00', TotalGeral));

    // Atualiza textos
    if IdiomaRelatorio = 'Inglês' then
    begin
      RLLabelTitulo.Caption := 'Financial Report';
      RLLabelPeriodo.Caption := 'Period: ' + DateToStr(DataInicial) + ' to ' + DateToStr(DataFim);
      RLLabelProduto.Caption := 'Product';
      RLLabelQuantidade.Caption := 'Qty Sold';
      RLLabelValorCusto.Caption := 'Cost Price';
      RLLabelVenda.Caption := 'Sale Price';
      RLLabelTotal.Caption := 'Total Profit';
      RLLabelMoedaTotal.Caption := 'Total Amount ' + SimboloMoeda + ': ' + FormatFloat('0.00', TotalGeral);
    end
    else
    begin
      RLLabelTitulo.Caption := 'Relatório de Finanças';
      RLLabelPeriodo.Caption := 'Período: ' + DateToStr(DataInicial) + ' a ' + DateToStr(DataFim);
      RLLabelProduto.Caption := 'Produto';
      RLLabelQuantidade.Caption := 'Qtd Vendidas';
      RLLabelValorCusto.Caption := 'Valor Custo';
      RLLabelVenda.Caption := 'Valor Venda';
      RLLabelTotal.Caption := 'Total Lucro';
      RLLabelMoedaTotal.Caption := 'Total Geral ' + SimboloMoeda + ': ' + FormatFloat('0.00', TotalGeral);
    end;

    RLReport.PreviewModal;
  end;
end;
end.


